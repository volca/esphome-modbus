# These substitutions allow the end user to override certain values
substitutions:
  name: "modbus"

esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  platformio_options:
    board_build.flash_mode: dio

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: esphome.project-template
    version: "1.0"

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3
  framework:
    type: esp-idf
    platform_version: "4.2.0"

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
#ota:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://volca/esphome-modbus/modbus.yaml@main

wifi:
  # Set up a wifi access point using the device name above
  ap:
    password: "12345678"

##########################################################
# Most projects should not remove anything from above here
# and should just modify the name, project name/version 
# and git url for the dashboard_import
##########################################################

# Sets up the improv via serial client for Wi-Fi provisioning.
# Handy if your device has a usb port for the user to add credentials when they first get it.
improv_serial:

uart:
  id: mod_bus
  tx_pin: 4
  rx_pin: 5
  baud_rate: 9600
  stop_bits: 1
  debug:
    direction: BOTH

modbus:
  #flow_control_pin: 23
  send_wait_time: 200ms
  id: mod_bus_demo

modbus_controller:
  - id: demo
    ## the Modbus device addr
    address: 0x1
    modbus_id: mod_bus_demo
    command_throttle: 200ms
    setup_priority: -10
    update_interval: 31s

sensor:
  - platform: modbus_controller
    modbus_controller_id: demo
    name: "Temperature"
    address: 0x0100
    unit_of_measurement: "Â°C"
    register_type: holding
    value_type: U_WORD
    accuracy_decimals: 0
